{"version":3,"sources":["src/lemonsync-src.js"],"names":["module","exports","grunt","aws","require","fs","https","mime","clone","emoji","registerMultiTask","done","async","lsTask","userOptions","options","access_token","store_host","theme_api_code","theme_repository","clean","region","httpsOptions","headers","hostname","path","method","s3","awsKey","awsSecret","awsToken","bucket","store","normalizePath","file","replace","s3Upload","fileStream","createReadStream","on","err","Error","uploadBucket","s3ThemePath","putObject","Bucket","Key","Body","CacheControl","ContentType","lookup","data","log","oklns","emojify","checkFiles","files","forEach","i","src","length","isFile","exists","write","tempStat","statSync","currentStat","tempTime","Date","mtime","currentTime","getTime","cloneRepo","repo","removeSync","process","cwd","getAllObjects","key","save","getObject","outputFile","deleteObject","getOrphans","orphanFile","localThemePath","checkYaml","code","listObjects","target","listObjectsV2","Prefix","objectKey","isMatch","delete","KeyCount","Contents","saveLocation","indexOf","j","remoteThemePath","request","res","d","JSON","parse","secret","token","config","update","accessKeyId","secretAccessKey","sessionToken","S3","errorlns","e","console","error","end"],"mappings":"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","file":"lemonsync.js","sourcesContent":["/*\n * grunt-lemonsync\n * https://github.com/ubuntu/workspace\n *\n * Copyright (c) 2016 Amir Farzan\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nmodule.exports = function(grunt) {\n  \n  var aws = require('aws-sdk');\n  var fs = require('fs-extra');\n  var https = require('https');\n  var mime = require('mime-types');\n  var clone = require('git-clone');\n  var emoji = require('node-emoji');\n\n  grunt.registerMultiTask('lemonsync', 'A grunt plugin for working on LemonStand themes locally.', function() {\n    \n    var done = this.async();\n    \n    var lsTask = this;\n    \n    var userOptions = this.options({\n      access_token: '',\n      store_host: '',\n      theme_api_code: '',\n      theme_repository: '',\n      clean: false,\n      region: 'us-east-1'\n    });\n    \n    var httpsOptions = {\n      headers: {\n        'Authorization': 'Bearer ' + userOptions.access_token,\n        'Content-Type': 'application/json'\n      },\n      hostname: userOptions.store_host,\n      path: '/api/v2/identity/s3',\n      method: 'POST'\n    };\n\n    var s3;\n    var awsKey;\n    var awsSecret;\n    var awsToken;\n    var bucket;\n    var store;\n\n    \n    function normalizePath(file) {\n      return file.replace('theme/', '');\n    }\n    \n    // Uploads theme files to S3.\n    function s3Upload(file) {\n      var fileStream = fs.createReadStream(file);\n  \n      fileStream.on('error', function (err) {\n        if (err) { \n          throw new Error('fileStream() => \\n' + err); \n        }\n      });  \n\n      fileStream.on('open', function () {\n\n        var uploadBucket = bucket + '/' + store + '/themes/' + userOptions.theme_api_code;\n        var s3ThemePath = normalizePath(file);\n\n        s3.putObject({\n          Bucket: bucket,\n          Key: store + '/themes/' + userOptions.theme_api_code + '/' + s3ThemePath,\n          Body: fileStream,\n          CacheControl: 'no-cache',\n          ContentType: mime.lookup(file) || 'application/octet-stream',\n        }, function (err, data) {\n          \n          if (err) { \n            throw new Error('s3.putObject() => \\n' + err);\n          } else {\n            grunt.log.oklns(emoji.emojify(':arrow_up:  Uploaded... ' + file));\n            // done();\n          }\n        });\n      });\n    }    \n    \n    function checkFiles() {\n      lsTask.files.forEach(function(file) {\n        for (var i = 0; i < file.src.length; i++) {\n          \n          if (grunt.file.isFile(file.src[i])) {\n            \n            if (!grunt.file.exists(\".ls-temp/\"+file.src[i]) ) {\n                grunt.file.write(\".ls-temp/\"+file.src[i], '');\n                s3Upload(file.src[i]);\n            } else {\n              var tempStat = fs.statSync(\".ls-temp/\"+file.src[i]);\n              var currentStat = fs.statSync(file.src[i]);\n              var tempTime = new Date(tempStat.mtime);\n              var currentTime = new Date(currentStat.mtime);\n              if (currentTime.getTime() > tempTime.getTime()) {\n                grunt.file.write(\".ls-temp/\"+file.src[i], '');\n                s3Upload(file.src[i]);\n              }\n            }\n          }\n        }\n      });\n    }\n    \n    function cloneRepo(repo) {\n      fs.removeSync('theme');\n      clone(repo, process.cwd() + '/theme', function(err) {\n        if (err) {\n          throw new Error('cloneRepo() => \\n' + err);\n        } else {\n          checkFiles();\n        }\n      });\n    } \n\n    function getAllObjects(key, save) {\n      s3.getObject({\n        Bucket: bucket,\n        Key: key\n      }, function(err, data) {\n        if (err) {\n          throw new Error('getAllObjects() => \\n' + err);\n        } else {\n          fs.outputFile(save, data.Body, function (err) {\n            if (err) {\n                throw new Error('outputFile() => \\n' + err);\n            } else {\n              grunt.log.oklns(emoji.emojify(':arrow_down:  ' + save));\n            }\n          });\n        }\n      });\n    }\n\n    function deleteObject(path, key) {\n      s3.deleteObject({\n        Bucket: bucket,\n        Key: key\n      }, function(err, data) {\n        if (err) {\n          throw new Error('deleteObject() => \\n' + err);\n        } else {\n          grunt.log.oklns(emoji.emojify(':x:  Deleted... ' + path));\n        }\n      });\n    }\n\n    function getOrphans(path, key) {\n\n      var orphanFile = true;\n\n      lsTask.files.forEach(function(file) {\n        for (var i = 0; i < file.src.length; i++) {             \n          if (grunt.file.isFile(file.src[i])) {\n            var localThemePath = normalizePath(file.src[i]);\n            if (localThemePath === path) {\n              orphanFile = false;\n            } \n          }\n        }\n      });\n\n      if (orphanFile) {\n        deleteObject(path, key);\n      }\n    }\n\n    function checkYaml() {\n      s3.getObject({\n        Bucket: bucket,\n        Key: store + '/themes/' + userOptions.theme_api_code + '/theme.yaml'\n      }, function(err, data) {\n        if (err) {\n          if (err.code === 'NoSuchKey') {\n            grunt.log.oklns('Getting theme from repository and installing in your store...');\n            cloneRepo(userOptions.theme_repository);\n          } else {\n            throw new Error('checkYaml() => \\n' + err);\n          }         \n        } else {\n          checkFiles();\n        }\n      });\n    }\n    \n    function listObjects(target) {\n      s3.listObjectsV2({\n        Bucket: bucket,\n        Prefix: store + '/themes/' + userOptions.theme_api_code\n      }, function(err, data) {\n        if (err) {\n          throw new Error('listObjects() => \\n' + err);\n        } \n\n        var objectKey;\n\n        if (target === 'local') {\n\n          lsTask.files.forEach(function(file) {\n            for (var i = 0; i < file.src.length; i++) {             \n              if (grunt.file.isMatch([\n                \"theme/content\",\n                \"theme/pages\",\n                \"theme/partials\",\n                \"theme/resources\",\n                \"theme/templates\",\n                \"theme/theme.yaml\"\n                ], file.src[i])) {\n                  grunt.file.delete(file.src[i]);\n              }\n            }\n          });\n\n          for (var i = 0; i < data.KeyCount; i++) {\n            objectKey = data.Contents[i].Key;\n            var saveLocation = \"theme/\" + objectKey.replace(store + '/themes/' + userOptions.theme_api_code + '/', '');\n            if (saveLocation.indexOf('.git') === -1) {\n              getAllObjects(objectKey, saveLocation);\n            }\n          }\n\n        } else if (target === 'remote') {\n\n          for (var j = 0; j < data.KeyCount; j++) {\n\n            objectKey = data.Contents[j].Key;\n            var remoteThemePath = objectKey.replace(store + '/themes/' + userOptions.theme_api_code + '/', '');\n            \n            getOrphans(remoteThemePath, objectKey);\n            \n          }\n        }\n\n      });\n    }\n\n    var request = https.request(httpsOptions, (res) => {\n\n      res.on('data', (d) => {\n        \n        awsKey = JSON.parse(d).data.key;\n        awsSecret = JSON.parse(d).data.secret;\n        awsToken = JSON.parse(d).data.token;\n        bucket = JSON.parse(d).data.bucket;\n        store = JSON.parse(d).data.store;\n    \n        aws.config.update({\n          accessKeyId: awsKey, \n          secretAccessKey: awsSecret, \n          sessionToken: awsToken, \n          region: userOptions.region\n        });\n\n        s3 = new aws.S3();\n        \n        switch (userOptions.clean) {\n          case false: {\n            checkYaml();\n            break;\n          }  \n          case \"local\": {\n            grunt.log.oklns(\"Replacing local theme with store theme...\");\n            listObjects(\"local\");\n            break;\n          }           \n          case \"remote\": {\n            grunt.log.oklns(\"Deleting store theme files that do not exist locally...\");\n            listObjects(\"remote\");\n            break;\n          }           \n          default: {\n            grunt.log.errorlns(\"Invalid command\");        \n          }\n        }\n      });\n    });\n\n    request.on('error', (e) => {\n      console.error(e);\n    });\n\n    request.end();\n    \n  });\n\n};\n"]}